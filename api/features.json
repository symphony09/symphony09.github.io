[{"title":"Coroutines for Go -1","uid":"603edc745edac1f578da82734f79ee53","slug":"go_coroutines","date":"2024-06-13T04:00:00.000Z","updated":"2024-06-13T14:30:24.333Z","comments":true,"path":"api/articles/go_coroutines.json","cover":null,"text":" 这篇文章翻译自 Go 团队主要成员 Russ Cox的协程提案research!rsc: Coroutines for Go (swtch.com)，此协程 coroutines 非彼协程 goroutine，由于全文较长，预计分为两篇，这篇主要说明是什么和为什么。本文采用AI...","link":"","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"编程","slug":"编程","count":4,"path":"api/categories/编程.json"}],"tags":[{"name":"golang","slug":"golang","count":5,"path":"api/tags/golang.json"},{"name":"翻译","slug":"翻译","count":1,"path":"api/tags/翻译.json"}],"author":{"name":"年鲤","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"喜欢折腾，随性而为<br/>sunfish69@163.com","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"NAS 折腾记","uid":"5e6bac11d8337953e8e2ec023a083948","slug":"nas1","date":"2021-07-26T03:29:41.000Z","updated":"2024-06-13T14:30:24.333Z","comments":true,"path":"api/articles/nas1.json","cover":"https://w.wallhaven.cc/full/43/wallhaven-43zkod.jpg","text":"因为本人没多少money，加上喜欢折腾，所以并未采用现成的 NAS 方案，选择自己凑配硬件搭建。在21年初初步搭建完成，现在已经平稳运行半年左右，还算满意。现在得空分享一下搭建经验，供同好参考。 方案介绍不同于常见的多盘位 NAS 机箱，我采用了迷你主机加硬盘盒的形式，通过网线连...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"折腾","slug":"折腾","count":1,"path":"api/categories/折腾.json"}],"tags":[{"name":"硬件","slug":"硬件","count":2,"path":"api/tags/硬件.json"},{"name":"nas","slug":"nas","count":1,"path":"api/tags/nas.json"}],"author":{"name":"年鲤","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"喜欢折腾，随性而为<br/>sunfish69@163.com","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Golang标准库：sync","uid":"4dbb2ad4d40b43ce8f2a583cb86bc39c","slug":"go-sync","date":"2021-07-04T05:35:41.000Z","updated":"2024-06-13T14:30:24.333Z","comments":true,"path":"api/articles/go-sync.json","cover":"https://w.wallhaven.cc/full/y8/wallhaven-y85ojk.png","text":"sync 包​ 虽然go主要通过协程和通道来完成同步，但是在某些情况下使用sync包提供的同步更加简洁和巧妙。下面列举sync包的应用场景及相应的用法和坑。 一：单例单例是经常要用到的一个编程模式，go最简单的单例实现就是使用 sync.One 示例package main im...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"编程","slug":"编程","count":4,"path":"api/categories/编程.json"}],"tags":[{"name":"golang","slug":"golang","count":5,"path":"api/tags/golang.json"},{"name":"标准库","slug":"标准库","count":1,"path":"api/tags/标准库.json"}],"author":{"name":"年鲤","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"喜欢折腾，随性而为<br/>sunfish69@163.com","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]