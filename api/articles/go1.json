{"title":"Golang：交叉编译","uid":"a2989562c244afbcf550859cf239a080","slug":"go1","date":"2021-05-06T03:38:41.000Z","updated":"2024-06-13T14:30:24.333Z","comments":false,"path":"api/articles/go1.json","keywords":null,"cover":"https://w.wallhaven.cc/full/y8/wallhaven-y85ojk.png","content":"<span id=\"more\"></span>\n\n<h3 id=\"什么是交叉编译\"><a href=\"#什么是交叉编译\" class=\"headerlink\" title=\"什么是交叉编译\"></a>什么是交叉编译</h3><p>交叉编译是指在一个平台上生成另一个平台上的可执行程序。</p>\n<p>比如要在Windows系统上生成可以在Linux上运行的程序时，就需要用到交叉编译。</p>\n<h3 id=\"Golang交叉编译\"><a href=\"#Golang交叉编译\" class=\"headerlink\" title=\"Golang交叉编译\"></a>Golang交叉编译</h3><h4 id=\"编译参数\"><a href=\"#编译参数\" class=\"headerlink\" title=\"编译参数\"></a>编译参数</h4><p>不同的编译参数决定了最后生成的程序能在什么平台上运行，默认为当前编译平台。</p>\n<p><code>GOOS</code> 目标平台的系统，常用值：windows、darwin（macOS）、linux</p>\n<p><code>GOARCH</code> 目标平台CPU架构， 常用的值 ：amd64、386、arm64、arm</p>\n<p><code>GOARM </code> 只有 <code>GOARCH</code> 是 <code>arm64</code> 才有效, 表示 <code>arm</code> 的版本, 目前只能是 5, 6, 7 其中之一</p>\n<p><code>CGO_ENABLED</code> 值为1或0，分别表示开启或关闭CGO，默认开启（值为1）。CGO用于Go调用C代码</p>\n<p><code>CC</code> 当支持交叉汇编时(即 <code>CGO_ENABLED=1</code>), 编译目标文件使用的 <code>c</code> 编译器</p>\n<p><code>CXX</code> 当支持交叉汇编时(即 <code>CGO_ENABLED=1</code>), 编译目标文件使用的 <code>c++</code> 编译器</p>\n<p><code>AR</code> 当支持交叉汇编时(即 <code>CGO_ENABLED=1</code>), 编译目标文件使用的创建库文件命令</p>\n<h4 id=\"Go支持的平台\"><a href=\"#Go支持的平台\" class=\"headerlink\" title=\"Go支持的平台\"></a>Go支持的平台</h4><p><code>GOOS</code> 和 <code>GOARCH</code>的不同组合就代表不同平台，可以使用<code>go tool dist list</code>命令查看支持的平台</p>\n<p>go 1.16.3 版本支持的平台如下：</p>\n<ul>\n<li><p>linux</p>\n<ul>\n<li>386，amd64，arm，arm64，mips，mips64，mips64le，mipsle，riscv64，ppc64，ppc64le，s390x</li>\n</ul>\n</li>\n<li><p>windows</p>\n<ul>\n<li>386，amd64，arm</li>\n</ul>\n</li>\n<li><p>darwin，ios</p>\n<ul>\n<li>amd64，arm64</li>\n</ul>\n</li>\n<li><p>android</p>\n<ul>\n<li>386，amd64，arm，arm64</li>\n</ul>\n</li>\n<li><p>freebsd，netbsd</p>\n<ul>\n<li>386，amd64，arm，arm64</li>\n</ul>\n</li>\n<li><p>openbsd</p>\n<ul>\n<li>386，amd64，arm，arm64，mips64</li>\n</ul>\n</li>\n<li><p>dragonfly，illumos，solaris</p>\n<ul>\n<li>amd64</li>\n</ul>\n</li>\n<li><p>plan9</p>\n<ul>\n<li>386，amd64，arm</li>\n</ul>\n</li>\n<li><p>js</p>\n<ul>\n<li>wasm</li>\n</ul>\n</li>\n<li><p>aix</p>\n<ul>\n<li>ppc64</li>\n</ul>\n</li>\n</ul>\n<p>其中386表示x86 32位，amd64表示x86 64位。</p>\n<h3 id=\"具体操作\"><a href=\"#具体操作\" class=\"headerlink\" title=\"具体操作\"></a>具体操作</h3><p>下面列举几种常见的交叉编译场景的具体命令操作</p>\n<p><strong>Mac 下编译 Linux 和 Windows 64位可执行程序</strong></p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">CGO_ENABLED&#x3D;0 GOOS&#x3D;linux GOARCH&#x3D;amd64 go build main.go\nCGO_ENABLED&#x3D;0 GOOS&#x3D;windows GOARCH&#x3D;amd64 go build main.go</code></pre>\n\n<p><strong>Linux 下编译 Mac 和 Windows 64位可执行程序</strong></p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">CGO_ENABLED&#x3D;0 GOOS&#x3D;darwin GOARCH&#x3D;amd64 go build main.go\nCGO_ENABLED&#x3D;0 GOOS&#x3D;windows GOARCH&#x3D;amd64 go build main.go</code></pre>\n\n<p><strong>Windows 下编译 Mac 和 Linux 64位可执行程序</strong></p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">SET CGO_ENABLED&#x3D;0\nSET GOOS&#x3D;darwin\nSET GOARCH&#x3D;amd64\ngo build main.go\n\nSET CGO_ENABLED&#x3D;0\nSET GOOS&#x3D;linux\nSET GOARCH&#x3D;amd64\ngo build main.go</code></pre>\n\n<p>可以通过将参数写入环境变量，这样就不用每次都要设置参数</p>\n<h3 id=\"难点：CGO\"><a href=\"#难点：CGO\" class=\"headerlink\" title=\"难点：CGO\"></a>难点：CGO</h3><p>上文操作示例都关闭了CGO，但当go项目包含C代码的调用就需要开启CGO，然而这会带来问题。</p>\n<p>例如在一个嵌入式开发场景中，需要使用<code>github.com/mattn/go-sqlite3</code>驱动sqlite，并且目标平台是arm架构，此时go本身的工具链不足以完成编译。</p>\n<p>解决方法就是下载对应的编译工具链</p>\n<p><a href=\"https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads\">arm编译工具链官网地址</a></p>\n<p>以Windows为例，下载<code>gcc-arm-none-eabi-XXXX-major-win32.zip</code></p>\n<p>下载完成后解压并将其下<code>bin</code>文件夹加入环境变量，最后将编译参数<code>CC</code>的值设为<code>arm-none-eabi-gcc</code></p>\n<p>这里简单提一下交叉编译工具链的命名规则：</p>\n<p>arch [-vendor] [-os] [-(gnu)eabi]</p>\n<ul>\n<li>arch - 体系架构，如ARM，MIPS</li>\n<li>vendor - 工具链提供商</li>\n<li>os - 目标操作系统</li>\n<li>eabi - 嵌入式应用二进制接口（Embedded Application Binary Interface）</li>\n</ul>\n","text":" 什么是交叉编译交叉编译是指在一个平台上生成另一个平台上的可执行程序。 比如要在Windows系统上生成可以在Linux上运行的程序时，就需要用到交叉编译。 Golang交叉编译编译参数不同的编译参数决定了最后生成的程序能在什么平台上运行，默认为当前编译平台。 GOOS 目标平台...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"速查","slug":"速查","count":1,"path":"api/categories/速查.json"},{"name":"项目部署","slug":"速查/项目部署","count":1,"path":"api/categories/速查/项目部署.json"}],"tags":[{"name":"golang","slug":"golang","count":5,"path":"api/tags/golang.json"},{"name":"编译","slug":"编译","count":1,"path":"api/tags/编译.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91\"><span class=\"toc-text\">什么是交叉编译</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Golang%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91\"><span class=\"toc-text\">Golang交叉编译</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%AF%91%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">编译参数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Go%E6%94%AF%E6%8C%81%E7%9A%84%E5%B9%B3%E5%8F%B0\"><span class=\"toc-text\">Go支持的平台</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B7%E4%BD%93%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">具体操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9A%BE%E7%82%B9%EF%BC%9ACGO\"><span class=\"toc-text\">难点：CGO</span></a></li></ol>","author":{"name":"年鲤","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"喜欢折腾，随性而为<br/>sunfish69@163.com","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Golang最佳实践：Functional Option","uid":"7d914a4575876c2b19b68d691e332d41","slug":"go-option","date":"2021-06-29T03:38:41.000Z","updated":"2024-06-13T14:30:24.333Z","comments":true,"path":"api/articles/go-option.json","keywords":null,"cover":"https://w.wallhaven.cc/full/y8/wallhaven-y85ojk.png","text":"使用场景在初始化结构体时常常会碰到这样的情况，一些字段是不能为空且没有默认值，一些字段是不能为空但有默认值，还有的的则可以为空。 举例来说，有这么一个结构体 type Pool struct &#123; Capacity int32 ExpiryDuration time.Du...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"编程","slug":"编程","count":4,"path":"api/categories/编程.json"}],"tags":[{"name":"golang","slug":"golang","count":5,"path":"api/tags/golang.json"},{"name":"最佳实践","slug":"最佳实践","count":2,"path":"api/tags/最佳实践.json"}],"author":{"name":"年鲤","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"喜欢折腾，随性而为<br/>sunfish69@163.com","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MySQL：MVCC","uid":"3b8d2c61522914168806280ffb0906e3","slug":"mysql2","date":"2021-05-05T05:30:02.000Z","updated":"2024-06-13T14:30:24.333Z","comments":false,"path":"api/articles/mysql2.json","keywords":null,"cover":null,"text":" 实现原理innoDB的行记录格式中有6字节事务ID的和7字节的回滚指针，通过为每一行记录添加这两个额外的隐藏值来实现MVCC，这两个值一个记录这行数据何时被创建，另外一个记录这行数据何时过期（或者被删除）。 但是InnoDB并不存储这些事件发生时的实际时间，相反它只存储这些事件...","link":"","photos":[],"count_time":{"symbolsCount":945,"symbolsTime":"1 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":9,"path":"api/categories/学习笔记.json"},{"name":"mysql","slug":"学习笔记/mysql","count":1,"path":"api/categories/学习笔记/mysql.json"}],"tags":[{"name":"mysql实现原理","slug":"mysql实现原理","count":1,"path":"api/tags/mysql实现原理.json"}],"author":{"name":"年鲤","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"喜欢折腾，随性而为<br/>sunfish69@163.com","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}