{"title":"Redis（五）：整数集合","uid":"9661b4a0c78c3413d585a5b60f2d0c10","slug":"redis5","date":"2021-03-12T05:47:30.000Z","updated":"2024-06-13T14:30:24.333Z","comments":false,"path":"api/articles/redis5.json","keywords":null,"cover":[],"content":"<span id=\"more\"></span>\n\n<p>整数集合（intset）是Redis用于保存整数值的集合抽象数据结构，它可以保存类型为int16_t、int32_t或者int64_t的整数值，并且保证集合中不会出现重复元素。</p>\n<p><strong>整数集合结构示意图</strong></p>\n<p><img src=\"/images/host/redis/redis-intset.jpg\" alt=\"整数集合结构示意图\"></p>\n<ul>\n<li><code>encoding</code>属性的值表示底层数组的整数类型。</li>\n<li><code>length</code>属性的值表示数组的长度。</li>\n<li><code>contents</code>就是底层整数数组。</li>\n</ul>\n<p>redis支持将不同类型的整数添加到整数数组中，但是不同类型的整数所占空间不同，这意味着需要额外的操作。</p>\n<p>当新元素的类型比整数集合现有所有元素的类型都要长时，需要升级操作。</p>\n<h5 id=\"升级操作\"><a href=\"#升级操作\" class=\"headerlink\" title=\"升级操作\"></a>升级操作</h5><ol>\n<li><p>根据新元素的类型，扩展整数集合底层数组的空间大小，并为新元素分配空间。</p>\n</li>\n<li><p>将底层数组现有的所有元素都转换成与新元素相同的类型，并将类型转换后的元素放置到正确的位上，而且在放置元素的过程中，需要继续维持底层数组的有序性质不变。从末尾开始搬可以避免位置冲突。</p>\n</li>\n<li><p>将新元素添加到底层数组里面。</p>\n</li>\n</ol>\n<p>因为引发升级的新元素的长度总是比整数集合现有所有元素的长度都大，所以这个新元素的值要么就大于所有现有元素而被放在末尾，要么就小于所有现有元素而被放在开头。</p>\n<p>通过升级操作，整数集合在具备灵活性的同时还能节约内存。要注意的是没有相对应的降级操作。</p>\n<h5 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h5><p>整数集合比较简单，要注意的是超出长度的的整数类型时引起的升级操作。</p>\n","text":" 整数集合（intset）是Redis用于保存整数值的集合抽象数据结构，它可以保存类型为int16_t、int32_t或者int64_t的整数值，并且保证集合中不会出现重复元素。 整数集合结构示意图 encoding属性的值表示底层数组的整数类型。 length属性的值表示数组的...","link":"","photos":[],"count_time":{"symbolsCount":562,"symbolsTime":"1 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":9,"path":"api/categories/学习笔记.json"},{"name":"Redis","slug":"学习笔记/Redis","count":5,"path":"api/categories/学习笔记/Redis.json"}],"tags":[{"name":"Redis数据结构与对象","slug":"Redis数据结构与对象","count":5,"path":"api/tags/Redis数据结构与对象.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%8D%87%E7%BA%A7%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">升级操作</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"年鲤","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"喜欢折腾，随性而为<br/>sunfish69@163.com","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"杂谈（一）","uid":"56062437aab4c6050adec4f20774c673","slug":"misc1","date":"2021-04-18T02:17:09.000Z","updated":"2021-06-26T04:56:29.216Z","comments":false,"path":"api/articles/misc1.json","keywords":null,"cover":[],"text":" 今天到手的就是上面这把黑峡谷x3了，现在打字用的就是它。 直肠子的一句话总结300价位 、 87配列、双模（2.4g wifi和有线）、手感不错 （凯华box轴体）、可充电 配件送了type-c数据线、手托、拔键器、防尘盖，还算良心。目前没发现啥问题。 之所以买了这把键盘呢，主...","link":"","photos":[],"count_time":{"symbolsCount":706,"symbolsTime":"1 mins."},"categories":[{"name":"杂谈","slug":"杂谈","count":1,"path":"api/categories/杂谈.json"},{"name":"折腾日常","slug":"杂谈/折腾日常","count":1,"path":"api/categories/杂谈/折腾日常.json"}],"tags":[{"name":"硬件","slug":"硬件","count":2,"path":"api/tags/硬件.json"},{"name":"键盘","slug":"键盘","count":1,"path":"api/tags/键盘.json"}],"author":{"name":"年鲤","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"喜欢折腾，随性而为<br/>sunfish69@163.com","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Redis（四）：跳跃表","uid":"b7745da1129b3624e0119421c5f639dd","slug":"redis4","date":"2021-03-11T05:26:55.000Z","updated":"2024-06-13T14:30:24.333Z","comments":false,"path":"api/articles/redis4.json","keywords":null,"cover":[],"text":" 跳跃表支持平均O（logN）、最坏O（N）复杂度的节点查找，还可以通过顺序性操作来批量处理节点。在大部分情况下，跳跃表的效率可以和平衡树相媲美，而且实现还更加简单。 跳跃表结构解析 header：指向跳跃表的表头节点。 tail：指向跳跃表的表尾节点。 level：记录目前跳跃...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":9,"path":"api/categories/学习笔记.json"},{"name":"Redis","slug":"学习笔记/Redis","count":5,"path":"api/categories/学习笔记/Redis.json"}],"tags":[{"name":"Redis数据结构与对象","slug":"Redis数据结构与对象","count":5,"path":"api/tags/Redis数据结构与对象.json"}],"author":{"name":"年鲤","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"喜欢折腾，随性而为<br/>sunfish69@163.com","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}