{"title":"Redis（二）：链表","uid":"46dc18036d332e4e6512d9692f74910b","slug":"redis2","date":"2021-03-09T04:13:45.000Z","updated":"2024-06-13T14:30:24.333Z","comments":false,"path":"api/articles/redis2.json","keywords":null,"cover":[],"content":"<span id=\"more\"></span>\n\n<p><strong>链表</strong>被广泛用于实现Redis的各种功能，比如列表键、发布与订阅、慢查询、监视器等。直接看结构示意图：</p>\n<p><img src=\"/images/host/redis/redis-list.png\" alt=\"链表结构示意图\"></p>\n<h5 id=\"特征总结如下：\"><a href=\"#特征总结如下：\" class=\"headerlink\" title=\"特征总结如下：\"></a>特征总结如下：</h5><ul>\n<li><strong>双端</strong>：链表节点带有prev和next指针，获取某个节点的前置节点和后置节点的复杂度都是O（1）。</li>\n<li><strong>无环</strong>：表头节点的prev指针和表尾节点的next指针都指向NULL，对链表的访问以NULL为终点。</li>\n<li><strong>带表头指针和表尾指针</strong>：通过list结构的head指针和tail指针，程序获取链表的表头节点和表尾节点的复杂度为O（1）。</li>\n<li><strong>带链表长度计数器</strong>：程序使用list结构的len属性来对list持有的链表节点进行计数，程序获取链表中节点数量的复杂度为O（1）。</li>\n<li><strong>多态</strong>：链表节点使用void*指针来保存节点值，并且可以通过list结构的dup、free、match三个属性为节点值设置类型特定函数，所以链表可以用于保存各种不同类型的值。<ul>\n<li>dup函数用于复制链表节点所保存的值；</li>\n<li>free函数用于释放链表节点所保存的值；</li>\n<li>match函数则用于对比链表节点所保存的值和另一个输入值是否相等。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h5><p>链表在数据结构中相当经典实用。</p>\n","text":" 链表被广泛用于实现Redis的各种功能，比如列表键、发布与订阅、慢查询、监视器等。直接看结构示意图： 特征总结如下： 双端：链表节点带有prev和next指针，获取某个节点的前置节点和后置节点的复杂度都是O（1）。 无环：表头节点的prev指针和表尾节点的next指针都指向NU...","link":"","photos":[],"count_time":{"symbolsCount":470,"symbolsTime":"1 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":9,"path":"api/categories/学习笔记.json"},{"name":"Redis","slug":"学习笔记/Redis","count":5,"path":"api/categories/学习笔记/Redis.json"}],"tags":[{"name":"Redis数据结构与对象","slug":"Redis数据结构与对象","count":5,"path":"api/tags/Redis数据结构与对象.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%89%B9%E5%BE%81%E6%80%BB%E7%BB%93%E5%A6%82%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">特征总结如下：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"年鲤","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"喜欢折腾，随性而为<br/>sunfish69@163.com","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Redis（三）：字典","uid":"f9b13b980458a49d4d916f8fb1d54566","slug":"redis3","date":"2021-03-09T05:11:45.000Z","updated":"2024-06-13T14:30:24.333Z","comments":false,"path":"api/articles/redis3.json","keywords":null,"cover":[],"text":" 字典在Redis中的应用相当广泛，比如Redis的数据库就是使用字典来作为底层实现的，对数据库的增、删、查、改操作也是构建在对字典的操作之上的。 字典结构解析Redis的字典使用哈希表作为底层实现，结构如图： table属性是一个数组，数组中的每个元素都是一个指向dict.h/...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":9,"path":"api/categories/学习笔记.json"},{"name":"Redis","slug":"学习笔记/Redis","count":5,"path":"api/categories/学习笔记/Redis.json"}],"tags":[{"name":"Redis数据结构与对象","slug":"Redis数据结构与对象","count":5,"path":"api/tags/Redis数据结构与对象.json"}],"author":{"name":"年鲤","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"喜欢折腾，随性而为<br/>sunfish69@163.com","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}